#
# File:   content-mit-8370x-subtitles/U4L6m.txt
#
# Captions for course module
#
# This file has 149 caption lines.
#
# Do not add or delete any lines.  If there is text missing at the end, please add it to the last line.
#
#----------------------------------------

So now we come to the second approach.
The point of this second approach, VQE,
is to get by with a much poorer, worse quantum computer
by not asking for quite as much.
And you'll see how that works by my describing the algorithm.
The point of this argument is to rely
upon the variational principle, which in this context
says that if I'm given some state psi, which is not
the ground state, and I measure the expectation
value of the Hamiltonian, this full, total Hamiltonian
with respect to that state, I will get some expectation
value, average energy, which is no smaller than the energy
of the ground state.

So therefore, I might do something
like introduce a bunch of parameters in here.
Let's call these theta, so theta 1, theta 2, theta 3.
And say I use these thetas to manipulate
the degrees of freedom I have in the input state
to this expectation value.

Then again, it will also be no smaller than that.
So I might define this thing as the expectation value of H,
parametrized by some thetas.
Now you can do this on a classical computer.
But the hardest part about the classical computation
is preparing the state and then computing this matrix element
of H with that state.
And the VQE algorithm proposes to do those two
steps on a quantum computer.
And the rest it does with a classical computer.
So here are the steps--
prepare psi of theta, where theta is controlled
by your classical algorithm.
And this is done on a quantum computer.
Measure this H of theta.
And there are many ways of doing this measurement, one of which
I will describe in a moment, if we have time,
on a quantum computer.
And then third, I'll take this classical measurement result
that you now have and run an optimization algorithm,
for example, the Nelder-Mead simplex algorithm,
or stochastic gradient descent, or you choose your favorite
optimization algorithm--
changing theta to minimize H of theta.

And go back to the beginning.
And this is done on a classical computer.
So now we have a hybrid where we have a quantum
computer executing some steps and a classical computer
executing some other steps.
And in fact, you can show that this kind of a variation
or expectation value is true, even
if you have a [INAUDIBLE] density matrix here instead
of a pure state.
So if your quantum computer starts to devolve and go not
so quantum on you halfway through,
it still cannot give you an expectation value that's better
than the ground state.
And there are various versions of this, these sets of theorems
which apply to variances and other quantities
that you might want to measure.
And so one can try to assert, although it's largely
done without proof today, that this algorithm will still
work reasonably OK on a noisy quantum computer
with not-so-good quantum bits.
And therefore, companies can deliver to you
a product which is a quantum computer with poor quantum bits
and still expect you to pay a lot of money for it
because it could run this algorithm
and give you some result.
There are not many proofs that it will do so,
but it is a very compelling argument and a very interesting
direction.
And there are now experimental results
showing small one and two gigabit quantum computers
doing exactly these steps, the variational quantum
eigensolver.
So the challenge of this--

there are two, I would point at most.
First, does this expectation value converge?

You have to rely upon this classical optimization
algorithm to get better and better values.
But you don't have a proof that you actually
got the lowest possible value or the desired ground state.
Second, this state preparation--

it's unclear how this state is actually prepared.
There are some ideas of how to prepare this.

For example, with adiabatic quantum computation,
you start with a beginning Hamiltonian,
which you can create, and try to construct an end
Hamiltonian whose ground state is this state that you
want to create.
And since you have this parametrized in principle,
you have some means by which you can do that.
This parameter, by the way, could be things, for example,
like the adiabatic path that you use in the quantum computer.
And related to this first challenge
is how you measure H. And one way people have done
this is to measure the terms of H.
So you can say this is actually equal
to the average expectation value of H1 plus H2 plus--
all the way up to however many terms there are in here.
So you can measure in principle the expectation value,
term by term, in a Hamiltonian.
And if the Hamiltonian terms are simple, like Pauli matrices,
then you have a feasible way of doing it.
Unfortunately, that means that you also
now added the error from each one of these expectation
values.
And so the error can grow very, very rapidly
as you're trying to estimate the expectation value this way.
Still, the variational quantum eigensolver is different.
We haven't looked at any kind of algorithm
like that in class in this semester.
How do you utilize a system which
has a quantum computer and a classical computer
together so that you can get something of the best of both
of the systems?
How can you make them work in concert so that one hands off
information to the other one so that now you
can feed back and try to speed up
while only having a limited amount of quantum coherence
and a limited number of qubits at your disposal.
I think this is a fascinating topic.
I want to leave you with that challenge.
And I want to also leave you with a challenge of thinking
about, how you can relate Hamiltonians and quantum
algorithms.
I described the Grover's algorithm to you and said,
you can find a Hamiltonian for Grover's algorithm.
Why don't you try this one for fun, as well?
What is a Hamiltonian for Peter Shor's algorithm
for quantum factoring?
Can you write down a Hamiltonian for the quantum Fourier
transform?
I'm not going to give you the answer to that,
but think about this.
And I hope that, in doing so, you
will cross many different bridges
and divides which are now what the entire community is talking
about and what the future of quantum computing
will dwell upon.
